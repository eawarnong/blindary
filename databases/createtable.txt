create table BLIND
(
	blind_id varchar(13) not null
		primary key,
	username varchar(25) not null,
	password varchar(100) not null,
	name varchar(50) not null,
	birthdate date not null,
	email varchar(50) not null,
	phone varchar(10) not null,
	lastest_play varchar(100) not null,
	document varchar(100) not null,
	status varchar(50) null,
	register_date datetime default CURRENT_TIMESTAMP null
)
;

create table BLIND_BOOKMARK
(
	blind_id varchar(13) not null,
	book_id int not null,
	date date not null,
	chapter_id int not null,
	primary key (blind_id, book_id, chapter_id),
	constraint BLIND_BOOKMARK_idfk_1
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index book_id
	on BLIND_BOOKMARK (book_id, chapter_id)
;

create table BLIND_FAVORITE
(
	blind_id varchar(13) not null,
	book_id int not null,
	date date not null,
	primary key (blind_id, book_id),
	constraint BLIND_FAVORITE_idfk_1
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index blind_id
	on BLIND_FAVORITE (blind_id)
;

create table BLIND_FEEDBACK
(
	feedback_id int auto_increment
		primary key,
	blind_id varchar(13) not null,
	book_id int not null,
	comment mediumtext not null,
	rating tinyint(1) not null,
	constraint BLIND_FEEDBACK_idfk_2
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index blind_id
	on BLIND_FEEDBACK (blind_id, book_id)
;

create index book_id
	on BLIND_FEEDBACK (book_id)
;

create table BLIND_LOG
(
	log_id int auto_increment
		primary key,
	blind_id varchar(13) not null,
	book_id int not null,
	date datetime not null,
	chapter_id int not null,
	paragraph_id int not null,
	constraint BLIND_LOG_idfk_1
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index blind_id
	on BLIND_LOG (blind_id)
;

create table BLIND_REQUEST
(
	request_id int auto_increment
		primary key,
	blind_id varchar(13) not null,
	ISBN varchar(100) null,
	date date not null,
	book_category varchar(45) null,
	book_name varchar(100) null,
	constraint BLIND_REQUEST_idfk_1
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index blind_id
	on BLIND_REQUEST (blind_id)
;

create table BOOK
(
	ISBN varchar(15) not null
		primary key,
	book_name varchar(100) not null,
	category_id int not null,
	no_of_chapter int not null,
	publish varchar(50) not null,
	no_of_page int not null,
	author varchar(50) not null,
	translator varchar(50) null,
	reading_times int default '0' null,
	image varchar(150) null
)
;

create index category_id
	on BOOK (category_id)
;

create table BOOK_RATING
(
	rating_id int auto_increment
		primary key,
	blind_id varchar(13) not null,
	book_id int not null,
	rating tinyint(5) not null,
	constraint BOOK_RATING_idfk_2
		foreign key (blind_id) references BLIND (blind_id)
)
;

create index blind_id
	on BOOK_RATING (blind_id)
;

create index book_id
	on BOOK_RATING (book_id)
;

create table CATEGORY
(
	category_id int auto_increment
		primary key,
	category_name varchar(50) not null
)
;

alter table BOOK
	add constraint BOOK_ibfk_1
		foreign key (category_id) references CATEGORY (category_id)
;

create table CHAPTER
(
	book_id int not null,
	chapter_id int not null,
	volunteer_id varchar(100) not null,
	playlist_link varchar(100) not null,
	create_at timestamp default CURRENT_TIMESTAMP not null,
	listening_times int not null,
	complete tinyint(1) not null,
	primary key (book_id, chapter_id)
)
;

create index volunteer_id
	on CHAPTER (volunteer_id)
;

alter table BLIND_BOOKMARK
	add constraint BLIND_BOOKMARK_idfk_2
		foreign key (book_id, chapter_id) references CHAPTER (book_id, chapter_id)
			on update cascade on delete cascade
;

create table CREATED_BOOK
(
	book_id int auto_increment
		primary key,
	volunteer_id varchar(30) not null,
	ISBN varchar(15) not null,
	create_at timestamp default CURRENT_TIMESTAMP not null,
	constraint CREATED_BOOK_BOOK_ISBN_fk
		foreign key (ISBN) references BOOK (ISBN)
)
;

create index ISBN
	on CREATED_BOOK (ISBN)
;

create index user_id
	on CREATED_BOOK (volunteer_id)
;

alter table BLIND_FEEDBACK
	add constraint BLIND_FEEDBACK_idfk_1
		foreign key (book_id) references CREATED_BOOK (book_id)
			on update cascade on delete cascade
;

alter table BOOK_RATING
	add constraint BOOK_RATING_idfk_1
		foreign key (book_id) references CREATED_BOOK (book_id)
			on update cascade on delete cascade
;

alter table CHAPTER
	add constraint CHAPTER_ibfk_1
		foreign key (book_id) references CREATED_BOOK (book_id)
			on update cascade on delete cascade
;

create table JOIN_REQUEST
(
	join_id int(4) auto_increment
		primary key,
	book_id int not null,
	chapter_id int not null,
	requester_id varchar(30) not null comment 'volunteer_id ของคนขอเข้าร่วม',
	owner_id varchar(30) not null comment 'volunteer_id ของผู้สร้างหนังสือ',
	is_accept tinyint(1) default '0' not null comment '0=default, 1=รอคนที่ขอยืนยัน, 2=คนขอกดยืนยันแล้ว, 3=เจ้าของสร้างบทนั้นเองแล้ว',
	date varchar(50) not null,
	is_read tinyint default '0' not null
)
;

create index book_id
	on JOIN_REQUEST (book_id)
;

create index chapter_id
	on JOIN_REQUEST (chapter_id)
;

create index owner_id
	on JOIN_REQUEST (owner_id)
;

create index volunteer_id
	on JOIN_REQUEST (requester_id)
;

create table PARAGRAPH
(
	paragraph_id int not null,
	paragraph_order int null comment 'ลำดับเสียงที่',
	book_id int not null,
	chapter_id int not null,
	video_link varchar(100) not null comment 'ลิ้งyoutube video',
	video_time int not null comment 'ความยาววีดีโอเป็นวินาที',
	isused tinyint(1) default '1' null comment '0= เสียงที่ไม่ใช้งาน 1=เสียงที่ใช้งาน',
	primary key (paragraph_id, book_id, chapter_id),
	constraint PARAGRAPH_ibfk_1
		foreign key (book_id, chapter_id) references CHAPTER (book_id, chapter_id)
			on update cascade on delete cascade
)
;

create index book_id
	on PARAGRAPH (book_id, chapter_id)
;

create table VOLUNTEER
(
	volunteer_id varchar(30) not null
		primary key,
	name varchar(70) not null,
	email varchar(254) not null,
	address varchar(100) not null,
	birthday varchar(50) not null,
	sex varchar(6) not null,
	channel_link varchar(100) null,
	avatar varchar(200) null,
	create_at timestamp default CURRENT_TIMESTAMP not null
)
;

alter table CREATED_BOOK
	add constraint CREATED_BOOK_idfk_1
		foreign key (volunteer_id) references VOLUNTEER (volunteer_id)
;

alter table JOIN_REQUEST
	add constraint requester_id
		foreign key (requester_id) references VOLUNTEER (volunteer_id)
;

create table VOLUNTEER_FEEDBACK
(
	feedback_id int auto_increment
		primary key,
	volunteer_id varchar(30) not null,
	comment text not null,
	rating tinyint(1) not null,
	constraint VOLUNTEER_FEEDBACK_idfk_1
		foreign key (volunteer_id) references VOLUNTEER (volunteer_id)
)
;

create index volunteer_id
	on VOLUNTEER_FEEDBACK (volunteer_id)
;

